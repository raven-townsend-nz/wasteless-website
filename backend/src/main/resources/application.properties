# port used to listen to requests
server.port=9499


# defining data source (MariaDB - SQL)
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# connection details
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
# MariaDB dialect (language) wrapper
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=update


## alternatively, use H2 (in-memory DB)
#spring.datasource.driverClassName=org.h2.Driver
## connection details
#spring.datasource.url=jdbc:h2:file:./database/database
#spring.datasource.username=sa
#spring.datasource.password=
## H2 needs a special dialect wrapper
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
#spring.jpa.hibernate.ddl-auto=update
## enable GUI console (similar to myPHPAdmin)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2


# print SQL statements
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=true
spring.datasource.initialization-mode=always
# This is the period of DGAA checks in seconds (currently checks every 60 seconds)
dgaa.check.period.string=60000
dgaa.user=${DGAA_USER}
dgaa.pass=${DGAA_PASS}

image.storagepath=./imagestore/
image.thumbnail-rel-path=thumbnails/
image.maxsize=0.5

# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max request size.
spring.servlet.multipart.max-request-size=50MB

# Intervals that runner checks for expired cards (currently checks every 3600 seconds, or every hour)
marketplace.expired.check.period=60000
